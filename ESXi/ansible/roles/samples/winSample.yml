---

- name: Hostname -> <name>
  win_hostname:
    name: <name>
  register: res

- name: Reboot
  win_reboot:
  when: res.reboot_required

- name: Set HostOnly IP Address
  win_shell: "If (-not(get-netipaddress | where {$_.IPAddress -eq '<HostOnlyIP>'})) {$adapter = (get-netadapter | where {$_.MacAddress -eq '<MACAdressHostOnly>'}).Name; New-NetIPAddress –InterfaceAlias $adapter –AddressFamily IPv4 -IPAddress <HostOnlyIP> –PrefixLength 24 -DefaultGateway <gateway> } Else { Write-Host 'IP Address Already Created.' }"

- name: Set HostOnly DNS Address
  win_shell: "$adapter = (get-netadapter | where {$_.MacAddress -eq '<MACAdressHostOnly>'}).Name; Set-DnsClientServerAddress -InterfaceAlias $adapter -ServerAddresses <DNSServer>,8.8.8.8"

- name: Download git installer from master
  win_get_url:
    url: http://192.168.1.52/gitWin64.exe
    dest: 'C:\gitWin64.exe'

- name: Install git
  win_shell: .\gitWin64.exe /SILENT 
  args:
    chdir: 'c:\'
  register: git

- debug: msg="{{ git.stdout }}"

- name: Check if existing DetectionLab directory
  win_stat:
    path: 'c:\lab-deploy'
  register: dir

- name: Git clone Detectionlab
  win_shell: git clone https://github.com/ngasc/lab-deploy.git
  args:
    chdir: 'c:\'
  register: cloning
  when: not dir.stat.exists

- name: Copy scripts to c:\vagrant
  win_shell: Copy-Item -Recurse c:\lab-deploy\Vagrant c:\vagrant
  ignore_errors: true

- name: Making Windows10 Great Again
  win_shell:  .\\MakeWindows10GreatAgain.ps1
  args:
    chdir: 'c:\vagrant\scripts'

- name: Join the Domain
  win_shell: .\\provision.ps1 <DCIP>
  args:
    chdir: 'c:\vagrant\scripts'
  register: join
  ignore_errors: true

- debug: msg="{{ join.stdout }}"
  ignore_errors: true

- name: Update group policy
  win_shell: "gpupdate /force"
  ignore_errors: true

- name: Reboot Server
  win_reboot:
    msg: "Joined the domain. Rebooting..."
    pre_reboot_delay: 15
    reboot_timeout: 600
    post_reboot_delay: 60