---

- name: Activate windows
  win_shell: cscript slmgr.vbs /rearm
  args:
    chdir: C:\Windows\System32\

- name: Reboot
  win_reboot:

- name: Hostname -> <name>
  win_hostname:
    name: <name>

- name: Reboot
  win_reboot:

- name: Set HostOnly IP Address
  win_shell: "If (-not(get-netipaddress | where {$_.IPAddress -eq '<HostOnlyIP>'})) {$adapter = (get-netadapter | where {$_.MacAddress -eq '<MACAdressHostOnly>'}).Name; New-NetIPAddress –InterfaceAlias $adapter –AddressFamily IPv4 -IPAddress <HostOnlyIP> –PrefixLength 24 -DefaultGateway <gateway> } Else { Write-Host 'IP Address Already Created.' }"

- name: Set HostOnly DNS Address
  win_shell: "$adapter = (get-netadapter | where {$_.MacAddress -eq '<MACAdressHostOnly>'}).Name; Set-DnsClientServerAddress -InterfaceAlias $adapter -ServerAddresses <DNSServer>,8.8.8.8"

- name : Download Installer from master
  win_copy : 
    src: ~/Tools/gitWin64.exe
    dest: C:\gitWin64.exe

- name: Install git
  win_shell: .\gitWin64.exe /SILENT 
  args:
    chdir: 'c:\'
  register: git

- debug: msg="{{ git.stdout }}"

- name: "Set the TimeZone"
  win_timezone:
    timezone: "Romance Standard Time"

#Process Explorer

- name: Create directory Process Explorer
  ansible.windows.win_file:
    path: C:\ProcessExplorer
    state: directory

- name : Download Process64 from master
  win_copy : 
    src: ~/Tools/ProcessExplorer/procexp64.exe
    dest: C:\ProcessExplorer\procexp64.exe

- name : Download Process64 from master
  win_copy : 
    src: ~/Tools/ProcessExplorer/procexp.exe
    dest: C:\ProcessExplorer\procexp.exe

- name: Create Shortcut Process on the desk
  win_shortcut:
    src: C:\ProcessExplorer\
    dest: C:\Users\vagrant\Desktop\ProcessExp.lnk
    icon: C:\ProcessExplorer\procexp.exe,0

#Sysmon

- name: Create directory sysmon
  ansible.windows.win_file:
    path: C:\sysmon
    state: directory

- name : Download Sysmon64 from master
  win_copy : 
    src: ~/Tools/Sysmon/Sysmon64.exe
    dest: C:\sysmon\Sysmon64.exe


- name : Download sysmonconfig from master
  win_copy : 
    src: ~/Tools/Sysmon/sysmonconfig-export-block.xml
    dest: C:\sysmon\sysmonconfig-export-block.xml

- name: Install sysmon64
  win_shell: C:\sysmon\Sysmon64.exe -accepteula -i C:\sysmon\sysmonconfig-export-block.xml
  register: output
  ignore_errors: true

    #7zip
- name: Create directory 7zip
  ansible.windows.win_file:
    path: C:\7zip
    state: directory

- name : Download 7zip from master
  win_copy : 
    src: ~/Tools/7zip/7zipWin.exe
    dest: C:\7zip\7zip.exe

- name: Install 7zip
  win_command: C:\7zip\7zip.exe /S

  #chrome

- name: Download chrome shell
  win_shell: '$LocalTempDir = $env:TEMP; $ChromeInstaller = "ChromeInstaller.exe"; (new-object System.Net.WebClient).DownloadFile("http://dl.google.com/chrome/install/375.126/chrome_installer.exe", "$LocalTempDir\$ChromeInstaller"); & "$LocalTempDir\$ChromeInstaller" /silent /install; $Process2Monitor = "ChromeInstaller"; Do { $ProcessesFound = Get-Process | ?{$Process2Monitor -contains $_.Name} | Select-Object -ExpandProperty Name; If ($ProcessesFound) { "Still running: $($ProcessesFound -join ", ")" | Write-Host; Start-Sleep -Seconds 2 } else { rm "$LocalTempDir\$ChromeInstaller" -ErrorAction SilentlyContinue -Verbose } } Until (!$ProcessesFound)'
  ignore_errors: true

  #Note++

- name: Create directory npp
  ansible.windows.win_file:
    path: C:\Install_npp
    state: directory

- name : Download npp from master
  win_copy : 
    src: ~/Tools/Install_npp/npp.8.4.6.Installer.x64.exe
    dest: C:\Install_npp/npp.8.4.6.Installer.x64.exe 

- name: Install npp
  win_command: C:\Install_npp/npp.8.4.6.Installer.x64.exe /S